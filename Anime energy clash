
        tween_tp(tp_table.tp3)

        tween_tp(tp_table.tp3)

        tween_tp(tp_table.tp3)

        tween_tp(tp_table.tp3)

        tween_tp(tp_table.tp3)

        tween_tp(tp_table.tp3)

        tween_tp(tp_table.tp3)

        tween_tp(tp_table.tp3)

        tween_tp(tp_table.tp3)

        tween_tp(tp_table.tp3)

        tween_tp(tp_table.tp3)

        tween_tp(tp_table.tp3)

        tween_tp(tp_table.tp3)

        tween_tp(tp_table.tp3)

        tween_tp(tp_table.tp3)

        tween_tp(tp_table.tp3)

        tween_tp(tp_table.tp3)

        tween_tp(tp_table.tp3)

        tween_tp(tp_table.tp3)

        tween_tp(tp_table.tp3)

        tween_tp(tp_table.tp3)

        tween_tp(tp_table.tp3)

        tween_tp(tp_table.tp3)

wait(5)

    else

 print("toggled off f f")

end

end)

FarmSection:NewToggle("DUPE", "DUPE", function(state)

    if state then

       local tp_table = {

            tp4 = Vector3.new(180, 60, -128893.43),

            tp5 = Vector3.new(999999999999999999999999999999999999, 100, -1836.438965),

        }

        

        local tween_s = game:GetService('TweenService')

        local tweeninfo = TweenInfo.new(1,Enum.EasingStyle.Linear)

        

        local lp = game.Players.LocalPlayer

        

        function tween_tp(v)

            if lp.Character and 

            lp.Character:FindFirstChild('HumanoidRootPart') then

                local cf = CFrame.new(v)

                local a = tween_s:Create(lp.Character.HumanoidRootPart,tweeninfo,{CFrame=cf})

                a:Play()

                 a.Completed:Wait()

            end

        end

        

        tween_tp(tp_table.tp4)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

        tween_tp(tp_table.tp5)

wait(5)

else

print("toggled off f f")

end

end)

, 
